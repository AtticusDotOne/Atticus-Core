<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
<changeSet id="user_acc_create_tables-DDL" author="vgorin">
    <sql>
        CREATE TABLE country (
            code          CHAR(2) NOT NULL PRIMARY KEY,
            name          VARCHAR(128) NOT NULL
        );
        CREATE TABLE language (
            code          CHAR(3) NOT NULL PRIMARY KEY,
            name          VARCHAR(128) NOT NULL
        );
        CREATE TABLE timezone (
            tz            VARCHAR(64) NOT NULL PRIMARY KEY,
            offset        INTEGER NOT NULL,
            name          VARCHAR(128) NOT NULL
        );
        CREATE TABLE user_acc (
            id            INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
            email         VARCHAR(64) NOT NULL UNIQUE KEY,
            username      VARCHAR(16) UNIQUE KEY,
            password      BINARY(64) NOT NULL,
            legal_name    VARCHAR(256),
            language_code CHAR(3),
            country_code  CHAR(2),
            timezone_tz   VARCHAR(64),

            created       TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            updated       TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,

            FOREIGN KEY FK_user_account_language_code(language_code) REFERENCES language(code),
            FOREIGN KEY FK_user_account_country_code(country_code) REFERENCES country(code),
            FOREIGN KEY FK_user_account_timezone_tz(timezone_tz) REFERENCES timezone(tz)
        );
    </sql>
</changeSet>
<changeSet id="user_acc_create_views" author="vgorin">
    <sql>
        CREATE VIEW user_account (
            id,
            email,
            username,
            password,
            legal_name,
            language,
            country,
            timezone
        ) AS
        SELECT
            a.id,
            a.email,
            a.username,
            a.password,
            a.legal_name,
            l.name,
            c.name,
            t.name
        FROM user_acc a
        LEFT JOIN language l
            ON a.language_code = l.code
        LEFT JOIN country c
            ON a.country_code = c.code
        LEFT JOIN timezone t
            ON a.timezone_tz = t.tz;
    </sql>
</changeSet>
<changeSet id="user_acc_fill_data-DML" author="vgorin">
    <sql>
        -- TODO: insert more countries
        INSERT INTO country(code, name)
            VALUES('US', 'United States');

        -- TODO: insert more languages
        INSERT INTO language(code, name)
            VALUES('eng', 'English');

        -- TODO: insert all timezones
        INSERT INTO timezone(tz, offset, name)
            VALUES('America/Los_Angeles', -28800000, 'Pacific Standard Time');

        -- insert test user
        INSERT INTO user_acc(email, username, password, legal_name, language_code, country_code, timezone_tz)
            VALUES('joedoe@example.com', 'joedoe', 0x7326E9C00036473E2EBF90A46E62DBB7E7655D6AD68FDD2B8C6CDAB6A741CD01E00DA0EECD868C2319E359C4EF8866D23C3C9B9EFACE598ADFEB88BCD5D941FD, 'Joe Doe LLC', 'eng', 'US', 'America/Los_Angeles');
    </sql>
</changeSet>

<changeSet id="contract_create_tables-DDL" author="vgorin">
    <sql>
        -- contract template contains text with placeholders
        -- parties are not defined, placeholders' values too
        CREATE TABLE contract_template(
            id          INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
            account_id  INT NOT NULL, -- owner/creator of the template
            title       VARCHAR(128) NOT NULL,
            version     VARCHAR(16),
            body        TEXT NOT NULL,
            -- initially template is editable (editable flag is set to one)
            -- zero value means template is not editable anymore
            -- template cannot go back to editable state once the flag becomes zero
            editable    BIT NOT NULL DEFAULT 1,
            deleted     BIT NOT NULL DEFAULT 0, -- indicates if template is deleted (1) or not (0)
            public      BIT NOT NULL DEFAULT 0, -- public posting flag

            rec_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,

            FOREIGN KEY FK_contract_template_account_id(account_id) REFERENCES user_acc(id)
        );
        -- contract / draft is a template with the placeholders defined
        CREATE TABLE contract(
            id          INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
            account_id  INT NOT NULL, -- draft owner/creator
            template_id INT NOT NULL,
            name        VARCHAR(128) NOT NULL, -- draft name not to be confused with template name
            version     VARCHAR(16), -- draft version not to be confused with template version
            -- initially contract is a draft and its editable (draft flag is set to one)
            -- zero value means contract is not a draft but a "ready to propose" contract
            -- contract cannot go back to draft state once the flag becomes zero
            -- contract variables cannot be modified for "ready to propose" contracts
            draft       BIT NOT NULL DEFAULT 1,
            deleted     BIT NOT NULL DEFAULT 1, -- indicates if a contract is deleted (1) or not (0)

            rec_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,

            FOREIGN KEY FK_contract_account_id(account_id) REFERENCES user_acc(id),
            FOREIGN KEY FK_contract_template_id(template_id) REFERENCES contract_template(id)
        );
        -- one to many mapping between contract and its variables/placeholders values
        CREATE TABLE contract_variable(
            contract_id INT NOT NULL,
            name        VARCHAR(16) NOT NULL, -- variable/placeholder name
            value       VARCHAR(32) NOT NULL, -- variable/placeholder value

            rec_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,

            FOREIGN KEY FK_contract_variable_contract_id(contract_id) REFERENCES contract(id)
        );
        -- a dialog between parties to sign the contract
        CREATE TABLE deal(
            id          INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
            account_id  INT NOT NULL, -- account which initiated that deal
            title       VARCHAR(32),

            rec_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,

            FOREIGN KEY FK_deal_account_id(account_id) REFERENCES user_acc(id)
        );
        -- proposal to enter into dialog
        CREATE TABLE deal_proposal(
            deal_id     INT NOT NULL,
            account_id  INT NOT NULL,
            invited_by  INT NOT NULL,
            valid_until DATETIME NOT NULL,
            accepted    BIT NOT NULL DEFAULT 0, -- 1 means the account is party of dialog

            rec_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,

            FOREIGN KEY FK_deal_proposal_account_id(account_id) REFERENCES user_acc(id),
            FOREIGN KEY FK_deal_proposal_invited_by(invited_by) REFERENCES user_acc(id)
        );
        -- is one to many mapping between contract and parties
        CREATE TABLE contract_proposal(
            id          INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
            contract_id INT NOT NULL,
            account_id  INT NOT NULL,
            party_name  VARCHAR(16) NOT NULL,
            valid_until DATETIME NOT NULL,
            signature   BINARY(132),
            signed_on   DATETIME,

            rec_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,

            FOREIGN KEY FK_contract_proposal_contract_id(contract_id) REFERENCES contract(id),
            FOREIGN KEY FK_contract_proposal_user_account_id(account_id) REFERENCES user_acc(id)
        );
        -- messages related to a deal
        CREATE TABLE deal_dialog(
            id          INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
            deal_id     INT NOT NULL,
            account_id  INT NOT NULL,
            message     TEXT NOT NULL,
            proposal_id INT, -- message may contain a proposal

            rec_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP, -- probably won't be used if messages are non-editable

            FOREIGN KEY FK_deal_dialog_deal_id(deal_id) REFERENCES deal(id),
            FOREIGN KEY FK_deal_dialog_account_id(account_id) REFERENCES user_acc(id),
            FOREIGN KEY FK_deal_dialog_proposal_id(account_id) REFERENCES contract_proposal(id)
        );
    </sql>
</changeSet>
</databaseChangeLog>
