<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
<changeSet id="user_acc_create_tables-DDL" author="vgorin">
    <sql>
        CREATE TABLE user_role(
            id            TINYINT UNSIGNED NOT NULL PRIMARY KEY,
            name          VARCHAR(16) NOT NULL
        );
        CREATE TABLE country (
            code          CHAR(2) NOT NULL PRIMARY KEY,
            name          VARCHAR(128) NOT NULL
        );
        CREATE TABLE language (
            code          CHAR(3) NOT NULL PRIMARY KEY,
            name          VARCHAR(128) NOT NULL
        );
        CREATE TABLE timezone (
            tz            VARCHAR(64) NOT NULL PRIMARY KEY,
            offset        INTEGER NOT NULL,
            name          VARCHAR(128) NOT NULL
        );
        CREATE TABLE user_acc (
            id            INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
            role_id       TINYINT UNSIGNED NOT NULL DEFAULT 1,
            email         VARCHAR(64) NOT NULL UNIQUE KEY,
            username      VARCHAR(16) UNIQUE KEY,
            password      BINARY(64) NOT NULL,
            legal_name    VARCHAR(256),
            language_code CHAR(3),
            country_code  CHAR(2),
            timezone_tz   VARCHAR(64),
            deleted       DATETIME, -- null value means account is active

            rec_created   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated   TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,

            FOREIGN KEY FK_user_account_language_code(language_code) REFERENCES language(code),
            FOREIGN KEY FK_user_account_country_code(country_code) REFERENCES country(code),
            FOREIGN KEY FK_user_account_timezone_tz(timezone_tz) REFERENCES timezone(tz),
            FOREIGN KEY FK_user_account_role_id(role_id) REFERENCES user_role(id)
        );
    </sql>
</changeSet>
<changeSet id="user_acc_create_views" author="vgorin">
    <sql>
        CREATE VIEW user_account (
            id,
            role,
            email,
            username,
            password,
            legal_name,
            language,
            country,
            timezone,
            created,
            updated,
            deleted
        ) AS
        SELECT
            a.id,
            r.name,
            a.email,
            a.username,
            a.password,
            a.legal_name,
            l.name,
            c.name,
            t.name,
            a.rec_created,
            a.rec_updated,
            a.deleted
        FROM user_acc a
        LEFT JOIN user_role r
            ON a.role_id = r.id
        LEFT JOIN language l
            ON a.language_code = l.code
        LEFT JOIN country c
            ON a.country_code = c.code
        LEFT JOIN timezone t
            ON a.timezone_tz = t.tz;
    </sql>
</changeSet>
<changeSet id="user_acc_fill_data-DML" author="vgorin">
    <sql>
        -- define some user roles
        INSERT INTO user_role(id, name) VALUES(1, 'user');
        INSERT INTO user_role(id, name) VALUES(255, 'admin');

        -- TODO: insert more countries
        INSERT INTO country(code, name)
            VALUES('US', 'United States');

        -- TODO: insert more languages
        INSERT INTO language(code, name)
            VALUES('eng', 'English');

        -- TODO: insert all timezones
        INSERT INTO timezone(tz, offset, name)
            VALUES('America/Los_Angeles', -28800000, 'Pacific Standard Time');

        -- insert test users
        INSERT INTO user_acc(email, username, password, legal_name, language_code, country_code, timezone_tz)
            VALUES('joedoe@example.com', 'joedoe', 0x7326E9C00036473E2EBF90A46E62DBB7E7655D6AD68FDD2B8C6CDAB6A741CD01E00DA0EECD868C2319E359C4EF8866D23C3C9B9EFACE598ADFEB88BCD5D941FD, 'Joe Doe LLC', 'eng', 'US', 'America/Los_Angeles');
        INSERT INTO user_acc(email, username, password, legal_name, language_code, country_code, timezone_tz)
            VALUES('1', '1', 0x293F24556AD4665AABF2457D5F6EB3A90DF0EAA85058F0D20CC43626F0A3934C225D9E1CD1950D5ECC5949470D625721B322BE3F616DBD91C9FA961EE3CCC90E, '1', 'eng', 'US', 'America/Los_Angeles');

        -- insert admin account
        INSERT INTO user_acc(role_id, email, username, password, language_code, country_code, timezone_tz)
            VALUES(255, 'admin@atticus.com', 'admin', 0x457DCC63CA48F642E567919F67BF53BF2F01B982978CFE3B39522ED25B84A2E1ABDB800855DA3B5F74228EA05A81593BDA9529A9105EAC691C9F7ACC55C3CF74, 'eng', 'US', 'America/Los_Angeles');
    </sql>
</changeSet>

<changeSet id="contract_create_tables-DDL" author="vgorin">
    <sql>
        -- contract template contains text with placeholders
        -- parties are not defined, placeholders' values too
        CREATE TABLE contract_template(
            id          INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
            account_id  INT UNSIGNED NOT NULL, -- owner/creator of the template
            title       VARCHAR(128) NOT NULL,
            version     VARCHAR(16),
            body        TEXT,
            -- initially template is editable (versioned on date is null)
            -- non-null value means template is not editable anymore
            -- template cannot go back to editable state once this date is set
            versioned   DATETIME, -- null value means template is editable
            deleted     DATETIME, -- null value means template is active
            published   DATETIME, -- null value means template is private
            modified    DATETIME NOT NULL DEFAULT NOW(),

            rec_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,

            CONSTRAINT  UQ_contract_template_COV UNIQUE(account_id, title, version),

            FOREIGN KEY FK_contract_template_account_id(account_id) REFERENCES user_acc(id)
        );
        -- contract / draft is a template with the placeholders defined
        CREATE TABLE contract(
            id          INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
            account_id  INT UNSIGNED NOT NULL, -- draft owner/creator
            template_id INT UNSIGNED, -- null value means contract is not based on the template
            memo        VARCHAR(128) NOT NULL, -- draft name not to be confused with template title
            body        TEXT, -- may contain placeholders as well
            -- initially contract is a draft and its editable (proposed on date is null)
            -- non-null value means contract is not a draft but a proposed contract
            -- contract cannot go back to draft state once it becomes a proposed contract
            -- contract variables cannot be modified for already proposed contracts
            proposed    DATETIME, -- null value means contract is a draft
            deleted     DATETIME, -- null value means contract is active
            modified    DATETIME NOT NULL DEFAULT NOW(),

            rec_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,

            FOREIGN KEY FK_contract_account_id(account_id) REFERENCES user_acc(id),
            FOREIGN KEY FK_contract_template_id(template_id) REFERENCES contract_template(id)
        );
        -- one to many mapping between contract and its variables/placeholders values
        CREATE TABLE contract_variable(
            contract_id INT UNSIGNED NOT NULL,
            name        VARCHAR(16) NOT NULL, -- variable/placeholder name
            value       VARCHAR(64) NOT NULL, -- variable/placeholder value

            rec_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,

            CONSTRAINT  UQ_contract_variable_COV UNIQUE(contract_id, name),

            FOREIGN KEY FK_contract_variable_contract_id(contract_id) REFERENCES contract(id)
        );
        -- a dialog between parties to sign the contract
        CREATE TABLE deal(
            id          INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
            account_id  INT UNSIGNED NOT NULL, -- account which initiated the deal
            title       VARCHAR(128),
            deleted     DATETIME, -- null value means deals is active

            rec_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,

            CONSTRAINT  UQ_deal_COV UNIQUE(account_id, title),

            FOREIGN KEY FK_deal_account_id(account_id) REFERENCES user_acc(id)
        );
        -- contract proposals, messages and everything else related to a deal
        -- append-only table
        CREATE TABLE deal_dialog(
            id          INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
            deal_id     INT UNSIGNED NOT NULL,
            account_id  INT UNSIGNED NOT NULL, -- the person who sends a message
            seq_num     INT UNSIGNED NOT NULL, -- message sequence number within dialog
            message     TEXT,
            attachment  BLOB,
            -- first message (seq_num = 0) must contain an initial proposal
            -- following messages (seq_num > 0) may contain counter proposals
            contract_id INT UNSIGNED,

            rec_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP, -- probably won't be used (messages are non-editable)

            CONSTRAINT  UQ_deal_dialog_COV UNIQUE(deal_id, seq_num),

            FOREIGN KEY FK_deal_dialog_deal_id(deal_id) REFERENCES deal(id),
            FOREIGN KEY FK_deal_dialog_account_id(account_id) REFERENCES user_acc(id),
            FOREIGN KEY FK_deal_dialog_contract_id(contract_id) REFERENCES contract(id)
        );
        -- one to many mapping between contract and parties
        -- unsigned, not expired records are active contract proposals
        CREATE TABLE contract_party(
            id          INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
            contract_id INT UNSIGNED NOT NULL,
            account_id  INT UNSIGNED NOT NULL,
            party_label VARCHAR(16), -- party label as it is in contract template
            valid_until DATETIME NOT NULL,
            signature   BINARY(132),
            signed_on   DATETIME,

            rec_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            rec_updated TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,

            CONSTRAINT  UQ_contract_party_COV UNIQUE(contract_id, account_id),

            FOREIGN KEY FK_contract_party_contract_id(contract_id) REFERENCES contract(id),
            FOREIGN KEY FK_contract_party_user_account_id(account_id) REFERENCES user_acc(id)
        );
    </sql>
</changeSet>
<!--
<changeSet id="contract_create_procedures-TCL" author="vgorin">
    <sql>

    </sql>
</changeSet>
-->
</databaseChangeLog>
